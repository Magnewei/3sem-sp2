### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Populate the database with some data
GET {{url}}/haikus/populate/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/

{
  "username": "user",
  "password": "test123"
}

###
POST {{url}}/auth/login/

{
  "username": "user",
  "password": "test123"
}

> {% client.global.set("jwt_token", response.body.token); %}

###
GET {{url}}/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST {{url}}/auth/user/addrole/
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "role": "admin"
}

### Get all haikus
GET {{url}}/haikus
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Get a specific haiku by ID
GET {{url}}/haikus/1
Accept: application/json
Authorization: Bearer {{jwt_token}}


### Create a new haiku
POST {{url}}/haikus
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "dateCreated": "2023-10-02",

  "author": "Le bron flames",


  "haikuParts": [
    {
      "id": 1,
        "content": "An old silent pond..."
    },
    {
      "id": 2,
        "content": "A frog jumps into the pond..."
    },
    {
      "id": 3,
      "content": "An old silent pond..."
    }
  ]
}

### Update an existing haiku
PUT {{url}}/haikus/2
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "dateCreated": "2023-10-02",
  "user": {
    "username": "user"
  },
  "author": "Le bron flames the second",
  "haikuParts": [
    {
      "id": 1,
      "content": "An old silent pond 2..."
    },
    {
      "id": 2,
      "content": "A frog jumps into the pond 3..."
    },
    {
      "id": 3,
      "content": "An old silent pond 4..."
    }
  ],
  "rating": {
    "score": 4.5,
    "spicyness": 3.0,
    "originality": 4.0
  }
}




### Delete a haiku by ID
DELETE {{url}}/haikus/1
Authorization: Bearer {{jwt_token}}